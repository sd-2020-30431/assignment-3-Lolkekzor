{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListAddForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport axios from 'axios';\nconst schema = yup.object({\n  listTitle: yup.string().required(),\n  itemTitle: yup.string().required(),\n  itemQuantity: yup.number().required().positive(),\n  itemCalories: yup.number().required().positive(),\n  itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n});\n\nclass ListAddForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCompletion = data => {\n      axios.post('http://localhost:8000/lists', JSON.stringify({\n        listTitle: data.listTitle,\n        itemTitle: data.itemTitle,\n        itemQuantity: data.itemQuantity,\n        itemCalories: data.itemCalories,\n        itemDate: data.itemDate,\n        itemExpiration: data.itemExpiration,\n        itemConsumption: data.itemConsumption\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        console.log(res);\n        res = res.data;\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \" Enter your new grocery list details \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: this.handleCompletion,\n      initialValues: {\n        listTitle: \"\",\n        itemTitle: \"\",\n        itemQuantity: 0,\n        itemCalories: 0,\n        itemDate: \"\",\n        itemExpiration: \"\",\n        itemConsumption: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"listTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }, \" List title \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"listTitle\",\n      value: values.listTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.listTitle && !errors.listTitle,\n      isInvalid: touched.listTitle && !!errors.listTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    }, errors.listTitle))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, \" Item \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"itemTitle\",\n      value: values.itemTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemTitle && !errors.itemTitle,\n      isInvalid: touched.itemTitle && !!errors.itemTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, errors.itemTitle)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemQuantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, \" Quantity \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemQuantity\",\n      value: values.itemQuantity,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemQuantity && !errors.itemQuantity,\n      isInvalid: touched.itemQuantity && !!errors.itemQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, errors.itemQuantity)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemCalories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 37\n      }\n    }, \" Calories \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemCalories\",\n      value: values.itemCalories,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemCalories && !errors.itemCalories,\n      isInvalid: touched.itemCalories && !!errors.itemCalories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }, errors.itemCalories)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 37\n      }\n    }, \" Date of purchase \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemDate\",\n      value: values.itemDate,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemDate && !errors.itemDate,\n      isInvalid: touched.itemDate && !!errors.itemDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }, errors.itemDate)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemExpiration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, \" Date of expiration \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemExpiration\",\n      value: values.itemExpiration,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemExpiration && !errors.itemExpiration,\n      isInvalid: touched.itemExpiration && !!errors.itemExpiration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }, errors.itemExpiration)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemConsumption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, \" Date of consumption \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemConsumption\",\n      value: values.itemConsumption,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemConsumption && !errors.itemConsumption,\n      isInvalid: touched.itemConsumption && !!errors.itemConsumption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, errors.itemConsumption))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ListAddForm;","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListAddForm.js"],"names":["React","Formik","yup","Form","Col","Row","Button","moment","axios","schema","object","listTitle","string","required","itemTitle","itemQuantity","number","positive","itemCalories","itemDate","date","min","subtract","calendar","max","add","itemExpiration","itemConsumption","ListAddForm","Component","handleCompletion","data","post","JSON","stringify","headers","Authorization","localStorage","getItem","then","res","console","log","render","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport axios from 'axios';\n\nconst schema = yup.object({\n    listTitle: yup.string().required(),\n    itemTitle: yup.string().required(),\n    itemQuantity: yup.number().required().positive(),\n    itemCalories: yup.number().required().positive(),\n    itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n})\n\nclass ListAddForm extends React.Component {\n    handleCompletion = (data) => {\n        axios.post('http://localhost:8000/lists', JSON.stringify({\n            listTitle: data.listTitle,\n            itemTitle: data.itemTitle,\n            itemQuantity: data.itemQuantity,\n            itemCalories: data.itemCalories,\n            itemDate: data.itemDate,\n            itemExpiration: data.itemExpiration,\n            itemConsumption: data.itemConsumption\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        }).then(res => {\n            console.log(res);\n            res = res.data;\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1> Enter your new grocery list details </h1>\n                <hr/>\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.handleCompletion}\n                    initialValues={{\n                        listTitle: \"\",\n                        itemTitle: \"\",\n                        itemQuantity: 0,\n                        itemCalories: 0,\n                        itemDate: \"\",\n                        itemExpiration: \"\",\n                        itemConsumption: \"\" \n                    }}\n                >\n                    {({\n                        handleSubmit,\n                            handleChange,\n                            handleBlur,\n                            values,\n                            touched,\n                            isValid,\n                            errors\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <Form.Row>\n                                <Form.Group className=\"form-group\" as={Row} controlId=\"listTitle\">\n                                    <Form.Label> List title </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"listTitle\"\n                                        value={values.listTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.listTitle && !errors.listTitle}\n                                        isInvalid={touched.listTitle && !!errors.listTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.listTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemTitle\">\n                                    <Form.Label> Item </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"itemTitle\"\n                                        value={values.itemTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemTitle && !errors.itemTitle}\n                                        isInvalid={touched.itemTitle && !!errors.itemTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemQuantity\">\n                                    <Form.Label> Quantity </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemQuantity\"\n                                        value={values.itemQuantity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemQuantity && !errors.itemQuantity}\n                                        isInvalid={touched.itemQuantity && !!errors.itemQuantity}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemQuantity}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemCalories\">\n                                    <Form.Label> Calories </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemCalories\"\n                                        value={values.itemCalories}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemCalories && !errors.itemCalories}\n                                        isInvalid={touched.itemCalories && !!errors.itemCalories}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemCalories}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemDate\">\n                                    <Form.Label> Date of purchase </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemDate\"\n                                        value={values.itemDate}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemDate && !errors.itemDate}\n                                        isInvalid={touched.itemDate && !!errors.itemDate}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemDate}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemExpiration\">\n                                    <Form.Label> Date of expiration </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemExpiration\"\n                                        value={values.itemExpiration}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemExpiration && !errors.itemExpiration}\n                                        isInvalid={touched.itemExpiration && !!errors.itemExpiration}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemExpiration}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemConsumption\">\n                                    <Form.Label> Date of consumption </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemConsumption\"\n                                        value={values.itemConsumption}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemConsumption && !errors.itemConsumption}\n                                        isInvalid={touched.itemConsumption && !!errors.itemConsumption}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemConsumption}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <hr/>\n                            <Button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</Button>\n                        </Form>\n\n                    )}\n\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default ListAddForm;\n"]},"metadata":{},"sourceType":"module"}