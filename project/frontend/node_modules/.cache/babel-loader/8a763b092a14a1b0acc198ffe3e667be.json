{"ast":null,"code":"import Reflux from 'reflux';\nimport axios from 'axios';\nimport LoggedUserActions from '../actions/LoggedUser';\n\nclass LoggedUserStore extends Reflux.Store {\n  constructor() {\n    super();\n    this.state = {\n      token: localStorage.getItem('token') || '',\n      logged: false\n    };\n    this.listenTo(LoggedUserActions.login, this.login);\n  }\n\n  login(user) {\n    if (this.state.token === undefined) {\n      axios.post('https://localhost:8000/token-auth/', {\n        username: user.username,\n        password: user.password\n      }).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n        this.setState(oldState => {\n          return { ...oldState,\n            logged: true,\n            token: res.token\n          };\n        });\n        localStorage.setItem('token', res.token);\n      });\n    }\n  }\n\n}\n\nexport default LoggedUserStore;","map":{"version":3,"sources":["/home/tudor/work/sd/project/frontend/src/reflux/stores/LoggedUser.js"],"names":["Reflux","axios","LoggedUserActions","LoggedUserStore","Store","constructor","state","token","localStorage","getItem","logged","listenTo","login","user","undefined","post","username","password","then","res","json","console","log","setState","oldState","setItem"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,iBAAP,MAA8B,uBAA9B;;AAEA,MAAMC,eAAN,SAA8BH,MAAM,CAACI,KAArC,CAA2C;AACvCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAD/B;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAMA,SAAKC,QAAL,CAAcT,iBAAiB,CAACU,KAAhC,EAAuC,KAAKA,KAA5C;AACH;;AAEDA,EAAAA,KAAK,CAACC,IAAD,EAAO;AACR,QAAI,KAAKP,KAAL,CAAWC,KAAX,KAAqBO,SAAzB,EAAoC;AAChCb,MAAAA,KAAK,CAACc,IAAN,CAAW,oCAAX,EAAiD;AAC7CC,QAAAA,QAAQ,EAAEH,IAAI,CAACG,QAD8B;AAE7CC,QAAAA,QAAQ,EAAEJ,IAAI,CAACI;AAF8B,OAAjD,EAGGC,IAHH,CAGQC,GAAG,IAAI;AACX,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OALD,EAKGF,IALH,CAKQC,GAAG,IAAI;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,aAAKI,QAAL,CAAcC,QAAQ,IAAI;AACtB,iBAAO,EACH,GAAGA,QADA;AAEHd,YAAAA,MAAM,EAAE,IAFL;AAGHH,YAAAA,KAAK,EAAEY,GAAG,CAACZ;AAHR,WAAP;AAKH,SAND;AAOAC,QAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA8BN,GAAG,CAACZ,KAAlC;AACH,OAfD;AAgBH;AACJ;;AA/BsC;;AAkC3C,eAAeJ,eAAf","sourcesContent":["import Reflux from 'reflux';\nimport axios from 'axios';\n\nimport LoggedUserActions from '../actions/LoggedUser';\n\nclass LoggedUserStore extends Reflux.Store {\n    constructor() {\n        super();\n        this.state = {\n            token: localStorage.getItem('token') || '',\n            logged: false\n        }\n\n\n        this.listenTo(LoggedUserActions.login, this.login);\n    }\n\n    login(user) {\n        if (this.state.token === undefined) {\n            axios.post('https://localhost:8000/token-auth/', {\n                username: user.username,\n                password: user.password\n            }).then(res => {\n                return res.json();\n            }).then(res => {\n                console.log(res);\n                this.setState(oldState => {\n                    return {\n                        ...oldState,\n                        logged: true,\n                        token: res.token\n                    }\n                })\n                localStorage.setItem('token', res.token);\n            })\n        }\n    }\n}\n\nexport default LoggedUserStore;\n"]},"metadata":{},"sourceType":"module"}