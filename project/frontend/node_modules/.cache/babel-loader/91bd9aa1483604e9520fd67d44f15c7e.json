{"ast":null,"code":"import Reflux from 'reflux';\nimport axios from 'axios';\nimport JSON from 'json';\nimport LoggedUserActions from '../actions/LoggedUser';\n\nclass LoggedUserStore extends Reflux.Store {\n  constructor() {\n    super();\n    this.state = {\n      token: localStorage.getItem('token') || '',\n      logged: false\n    };\n    this.listenTo(LoggedUserActions.login, this.login);\n  }\n\n  login(user) {\n    console.log(\"LOGIN METHOD CALLED\");\n    console.log(this.state);\n\n    if (this.state.token === \"\") {\n      axios.post('http://localhost:8000/token-auth/', JSON.stringify({\n        username: user.username,\n        password: user.password\n      })).then(res => {\n        return res.json();\n      }).then(res => {\n        console.log(res);\n        this.setState(oldState => {\n          return { ...oldState,\n            logged: true,\n            token: res.token\n          };\n        });\n        localStorage.setItem('token', res.token);\n      });\n    }\n  }\n\n}\n\nexport default LoggedUserStore;","map":{"version":3,"sources":["/home/tudor/work/sd/project/frontend/src/reflux/stores/LoggedUser.js"],"names":["Reflux","axios","JSON","LoggedUserActions","LoggedUserStore","Store","constructor","state","token","localStorage","getItem","logged","listenTo","login","user","console","log","post","stringify","username","password","then","res","json","setState","oldState","setItem"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,OAAOC,iBAAP,MAA8B,uBAA9B;;AAEA,MAAMC,eAAN,SAA8BJ,MAAM,CAACK,KAArC,CAA2C;AACvCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAD/B;AAETC,MAAAA,MAAM,EAAE;AAFC,KAAb;AAMA,SAAKC,QAAL,CAAcT,iBAAiB,CAACU,KAAhC,EAAuC,KAAKA,KAA5C;AACH;;AAEDA,EAAAA,KAAK,CAACC,IAAD,EAAO;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;;AACA,QAAI,KAAKA,KAAL,CAAWC,KAAX,KAAqB,EAAzB,EAA6B;AACzBP,MAAAA,KAAK,CAACgB,IAAN,CAAW,mCAAX,EAAgDf,IAAI,CAACgB,SAAL,CAAe;AAC3DC,QAAAA,QAAQ,EAAEL,IAAI,CAACK,QAD4C;AAE3DC,QAAAA,QAAQ,EAAEN,IAAI,CAACM;AAF4C,OAAf,CAAhD,EAGIC,IAHJ,CAGSC,GAAG,IAAI;AACZ,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,OALD,EAKGF,IALH,CAKQC,GAAG,IAAI;AACXP,QAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,aAAKE,QAAL,CAAcC,QAAQ,IAAI;AACtB,iBAAO,EACH,GAAGA,QADA;AAEHd,YAAAA,MAAM,EAAE,IAFL;AAGHH,YAAAA,KAAK,EAAEc,GAAG,CAACd;AAHR,WAAP;AAKH,SAND;AAOAC,QAAAA,YAAY,CAACiB,OAAb,CAAqB,OAArB,EAA8BJ,GAAG,CAACd,KAAlC;AACH,OAfD;AAgBH;AACJ;;AAjCsC;;AAoC3C,eAAeJ,eAAf","sourcesContent":["import Reflux from 'reflux';\nimport axios from 'axios';\nimport JSON from 'json';\n\nimport LoggedUserActions from '../actions/LoggedUser';\n\nclass LoggedUserStore extends Reflux.Store {\n    constructor() {\n        super();\n        this.state = {\n            token: localStorage.getItem('token') || '',\n            logged: false\n        }\n\n\n        this.listenTo(LoggedUserActions.login, this.login);\n    }\n\n    login(user) {\n        console.log(\"LOGIN METHOD CALLED\");\n        console.log(this.state);\n        if (this.state.token === \"\") {\n            axios.post('http://localhost:8000/token-auth/', JSON.stringify({\n                username: user.username,\n                password: user.password\n            })).then(res => {\n                return res.json();\n            }).then(res => {\n                console.log(res);\n                this.setState(oldState => {\n                    return {\n                        ...oldState,\n                        logged: true,\n                        token: res.token\n                    }\n                })\n                localStorage.setItem('token', res.token);\n            })\n        }\n    }\n}\n\nexport default LoggedUserStore;\n"]},"metadata":{},"sourceType":"module"}