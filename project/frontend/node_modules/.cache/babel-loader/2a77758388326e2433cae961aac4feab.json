{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/project/frontend/src/views/SignupForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Row, Button } from 'react-bootstrap';\nimport './SignupForm.css';\nconst schema = yup.object({\n  username: yup.string().required(\"Please enter an username\").min(3, \"Username must be at least 3 characters long\"),\n  password: yup.string().required(\"Please enter a password\").min(8, \"Password is too short, must be at least 8 characters\"),\n  passwordConfirmation: yup.string().required(\"Please confirm your password\").oneOf([yup.ref('password'), null], 'Passwords must match')\n});\n\nclass SignupForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.testFunction = test => {\n      console.log(test);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }, \"Sign up\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: this.testFunction,\n      initialValues: {\n        username: '',\n        password: '',\n        passwordConfirmation: ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, \" Username \"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"username\",\n      value: values.username,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.username && !errors.username,\n      isInvalid: !!errors.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, \" Password \"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"form-control\",\n      type: \"password\",\n      name: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.password && !errors.password,\n      isInvalid: !!errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"passwordConfirmation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 33\n      }\n    }, \" Confirm Password \"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"form-control\",\n      type: \"password\",\n      name: \"passwordConfirmation\",\n      value: values.passwordConfirmation,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.passwordConfirmation && !errors.passwordConfirmation,\n      isInvalid: !!errors.passwordConfirmation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, errors.passwordConfirmation)), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default SignupForm;","map":{"version":3,"sources":["/home/tudor/work/sd/project/frontend/src/views/SignupForm.js"],"names":["React","Formik","yup","Form","Row","Button","schema","object","username","string","required","min","password","passwordConfirmation","oneOf","ref","SignupForm","Component","testFunction","test","console","log","render","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Row, Button } from 'react-bootstrap';\n\nimport './SignupForm.css';\n\nconst schema = yup.object({\n    username: yup.string().required(\"Please enter an username\").min(3, \"Username must be at least 3 characters long\"),\n    password: yup.string().required(\"Please enter a password\").min(8, \"Password is too short, must be at least 8 characters\"),\n    passwordConfirmation: yup.string().required(\"Please confirm your password\").oneOf([yup.ref('password'), null], 'Passwords must match')\n});\n\nclass SignupForm extends React.Component{\n    testFunction = (test) => {\n        console.log(test);\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Sign up</h1>\n                <hr/>\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.testFunction}\n                    initialValues={{\n                        username: '',\n                        password: '',\n                        passwordConfirmation: ''\n                    }}\n                >\n                    {({\n                        handleSubmit,\n                        handleChange,\n                        handleBlur,\n                        values,\n                        touched,\n                        isValid,\n                        errors,\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <Form.Group className=\"form-group\" as={Row} controlId=\"username\">\n                                <Form.Label> Username </Form.Label>\n                                <Form.Control\n                                    className=\"form-control\"\n                                    type=\"text\"\n                                    name=\"username\"\n                                    value={values.username}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    isValid={touched.username && !errors.username}\n                                    isInvalid={!!errors.username}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.username}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group className=\"form-group\" as={Row} controlId=\"password\">\n                                <Form.Label> Password </Form.Label>\n                                <Form.Control\n                                    className=\"form-control\"\n                                    type=\"password\"\n                                    name=\"password\"\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    isValid={touched.password && !errors.password}\n                                    isInvalid={!!errors.password}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.password}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group className=\"form-group\" as={Row} controlId=\"passwordConfirmation\">\n                                <Form.Label> Confirm Password </Form.Label>\n                                <Form.Control\n                                    className=\"form-control\"\n                                    type=\"password\"\n                                    name=\"passwordConfirmation\"\n                                    value={values.passwordConfirmation}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    isValid={touched.passwordConfirmation && !errors.passwordConfirmation}\n                                    isInvalid={!!errors.passwordConfirmation}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.passwordConfirmation}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <hr/>\n                            <Button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}