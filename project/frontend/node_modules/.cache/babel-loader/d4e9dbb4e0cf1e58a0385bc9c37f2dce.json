{"ast":null,"code":"var _ = require('reflux-core/lib/utils'),\n    ListenerMethods = require('reflux-core/lib/ListenerMethods');\n/**\r\n * A module meant to be consumed as a mixin by a React component. Supplies the methods from\r\n * `ListenerMethods` mixin and takes care of teardown of subscriptions.\r\n * Note that if you're using the `connect` mixin you don't need this mixin, as connect will\r\n * import everything this mixin contains!\r\n */\n\n\nmodule.exports = _.extend({\n  /**\r\n   * Cleans up all listener previously registered.\r\n   */\n  componentWillUnmount: ListenerMethods.stopListeningToAll\n}, ListenerMethods);","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-3-Lolkekzor/project/frontend/node_modules/reflux/src/ListenerMixin.js"],"names":["_","require","ListenerMethods","module","exports","extend","componentWillUnmount","stopListeningToAll"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,uBAAD,CAAf;AAAA,IACIC,eAAe,GAAGD,OAAO,CAAC,iCAAD,CAD7B;AAGA;;;;;;;;AAMAE,MAAM,CAACC,OAAP,GAAiBJ,CAAC,CAACK,MAAF,CAAS;AAEtB;;;AAGAC,EAAAA,oBAAoB,EAAEJ,eAAe,CAACK;AALhB,CAAT,EAOdL,eAPc,CAAjB","sourcesContent":["var _ = require('reflux-core/lib/utils'),\r\n    ListenerMethods = require('reflux-core/lib/ListenerMethods');\r\n\r\n/**\r\n * A module meant to be consumed as a mixin by a React component. Supplies the methods from\r\n * `ListenerMethods` mixin and takes care of teardown of subscriptions.\r\n * Note that if you're using the `connect` mixin you don't need this mixin, as connect will\r\n * import everything this mixin contains!\r\n */\r\nmodule.exports = _.extend({\r\n\r\n    /**\r\n     * Cleans up all listener previously registered.\r\n     */\r\n    componentWillUnmount: ListenerMethods.stopListeningToAll\r\n\r\n}, ListenerMethods);\r\n"]},"metadata":{},"sourceType":"script"}