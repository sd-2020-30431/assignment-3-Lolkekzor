{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListDetailView.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Table, Form, Col, Row, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport axios from 'axios';\nconst schema = yup.object({\n  itemTitle: yup.string().required(),\n  itemQuantity: yup.number().required().positive(),\n  itemCalories: yup.number().required().positive(),\n  itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n});\n\nclass ListAddForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCompletion = data => {\n      axios.post(\"http://localhost:8000/lists\", JSON.stringify({\n        itemTitle: data.itemTitle,\n        itemQuantity: data.itemQuantity,\n        itemCalories: data.itemCalories,\n        itemDate: data.itemDate,\n        itemExpiration: data.itemExpiration,\n        itemConsumption: data.itemConsumption\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        console.log(res);\n        res = res.data;\n        this.setState(prevState => ({ ...prevState,\n          name: res[0].name,\n          lists: res[1]\n        }));\n      });\n    };\n\n    this.state = {\n      listId: props.match.params.id,\n      name: \"TEST\",\n      items: [{\n        name: \"TEST ITEM\",\n        quantity: 100,\n        calories: 200,\n        purchase_date: moment().calendar(),\n        expiration_date: moment().calendar(),\n        consumption_date: moment().calendar()\n      }]\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`http://localhost:8000/list/${this.state.listId}`, {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      console.log(res);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \" Your list: \", this.state.name, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"Calories\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Purchased\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Expires\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"Consumption\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, this.state.items.map((item, idx) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }\n      }, idx + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }\n      }, item.quantity), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }\n      }, item.calories), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, item.purchase_date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 37\n        }\n      }, item.expiration_date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }\n      }, item.consumption_date));\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \" Add a new item \"), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: this.handleCompletion,\n      initialValues: {\n        itemTitle: \"\",\n        itemQuantity: 0,\n        itemCalories: 0,\n        itemDate: \"\",\n        itemExpiration: \"\",\n        itemConsumption: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, \" Item \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"itemTitle\",\n      value: values.itemTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemTitle && !errors.itemTitle,\n      isInvalid: touched.itemTitle && !!errors.itemTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 37\n      }\n    }, errors.itemTitle)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemQuantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, \" Quantity \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemQuantity\",\n      value: values.itemQuantity,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemQuantity && !errors.itemQuantity,\n      isInvalid: touched.itemQuantity && !!errors.itemQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }, errors.itemQuantity)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemCalories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, \" Calories \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemCalories\",\n      value: values.itemCalories,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemCalories && !errors.itemCalories,\n      isInvalid: touched.itemCalories && !!errors.itemCalories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 37\n      }\n    }, errors.itemCalories)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, \" Date of purchase \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemDate\",\n      value: values.itemDate,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemDate && !errors.itemDate,\n      isInvalid: touched.itemDate && !!errors.itemDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 37\n      }\n    }, errors.itemDate)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemExpiration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 37\n      }\n    }, \" Date of expiration \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemExpiration\",\n      value: values.itemExpiration,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemExpiration && !errors.itemExpiration,\n      isInvalid: touched.itemExpiration && !!errors.itemExpiration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 37\n      }\n    }, errors.itemExpiration)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemConsumption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 37\n      }\n    }, \" Date of consumption \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemConsumption\",\n      value: values.itemConsumption,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemConsumption && !errors.itemConsumption,\n      isInvalid: touched.itemConsumption && !!errors.itemConsumption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 37\n      }\n    }, errors.itemConsumption))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ListAddForm;","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListDetailView.js"],"names":["React","Formik","yup","Table","Form","Col","Row","Button","useParams","moment","axios","schema","object","itemTitle","string","required","itemQuantity","number","positive","itemCalories","itemDate","date","min","subtract","calendar","max","add","itemExpiration","itemConsumption","ListAddForm","Component","constructor","props","handleCompletion","data","post","JSON","stringify","headers","Authorization","localStorage","getItem","then","res","console","log","setState","prevState","name","lists","state","listId","match","params","id","items","quantity","calories","purchase_date","expiration_date","consumption_date","componentDidMount","get","render","map","item","idx","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Table, Form, Col, Row, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport axios from 'axios';\n\nconst schema = yup.object({\n    itemTitle: yup.string().required(),\n    itemQuantity: yup.number().required().positive(),\n    itemCalories: yup.number().required().positive(),\n    itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n})\n\nclass ListAddForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listId: props.match.params.id,\n            name: \"TEST\",\n            items: [\n                {\n                    name: \"TEST ITEM\",\n                    quantity: 100,\n                    calories: 200,\n                    purchase_date: moment().calendar(),\n                    expiration_date: moment().calendar(),\n                    consumption_date: moment().calendar()\n                }\n            ]\n\n        }\n    }\n\n    componentDidMount() {\n        axios.get(`http://localhost:8000/list/${this.state.listId}`, {\n            headers: {\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        }).then(res => {\n            console.log(res);\n        })\n\n    }\n\n    handleCompletion = (data) => {\n        axios.post(\"http://localhost:8000/lists\", JSON.stringify({\n            itemTitle: data.itemTitle,\n            itemQuantity: data.itemQuantity,\n            itemCalories: data.itemCalories,\n            itemDate: data.itemDate,\n            itemExpiration: data.itemExpiration,\n            itemConsumption: data.itemConsumption\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        }).then(res => {\n            console.log(res);\n            res = res.data;\n            this.setState((prevState) => (\n                {\n                    ...prevState,\n                    name: res[0].name,\n                    lists: res[1],\n                }\n            ))\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1> Your list: {this.state.name} </h1>\n                <hr/>\n                <Table responsive striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Item</th>\n                            <th>Quantity</th>\n                            <th>Calories</th>\n                            <th>Purchased</th>\n                            <th>Expires</th>\n                            <th>Consumption</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.items.map((item, idx) => {\n                            return(\n                                <tr key={idx}>\n                                    <td>{idx + 1}</td>\n                                    <td>{item.name}</td>\n                                    <td>{item.quantity}</td>\n                                    <td>{item.calories}</td>\n                                    <td>{item.purchase_date}</td>\n                                    <td>{item.expiration_date}</td>\n                                    <td>{item.consumption_date}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </Table>\n                <hr/>\n                <h2> Add a new item </h2>\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.handleCompletion}\n                    initialValues={{\n                        itemTitle: \"\",\n                        itemQuantity: 0,\n                        itemCalories: 0,\n                        itemDate: \"\",\n                        itemExpiration: \"\",\n                        itemConsumption: \"\" \n                    }}\n                >\n                    {({\n                        handleSubmit,\n                            handleChange,\n                            handleBlur,\n                            values,\n                            touched,\n                            isValid,\n                            errors\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemTitle\">\n                                    <Form.Label> Item </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"itemTitle\"\n                                        value={values.itemTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemTitle && !errors.itemTitle}\n                                        isInvalid={touched.itemTitle && !!errors.itemTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemQuantity\">\n                                    <Form.Label> Quantity </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemQuantity\"\n                                        value={values.itemQuantity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemQuantity && !errors.itemQuantity}\n                                        isInvalid={touched.itemQuantity && !!errors.itemQuantity}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemQuantity}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemCalories\">\n                                    <Form.Label> Calories </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemCalories\"\n                                        value={values.itemCalories}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemCalories && !errors.itemCalories}\n                                        isInvalid={touched.itemCalories && !!errors.itemCalories}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemCalories}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemDate\">\n                                    <Form.Label> Date of purchase </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemDate\"\n                                        value={values.itemDate}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemDate && !errors.itemDate}\n                                        isInvalid={touched.itemDate && !!errors.itemDate}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemDate}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemExpiration\">\n                                    <Form.Label> Date of expiration </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemExpiration\"\n                                        value={values.itemExpiration}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemExpiration && !errors.itemExpiration}\n                                        isInvalid={touched.itemExpiration && !!errors.itemExpiration}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemExpiration}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemConsumption\">\n                                    <Form.Label> Date of consumption </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemConsumption\"\n                                        value={values.itemConsumption}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemConsumption && !errors.itemConsumption}\n                                        isInvalid={touched.itemConsumption && !!errors.itemConsumption}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemConsumption}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <hr/>\n                            <Button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</Button>\n                        </Form>\n\n                    )}\n\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default ListAddForm;\n"]},"metadata":{},"sourceType":"module"}