{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/project/frontend/src/views/LoginForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, InputGroup, Button } from 'react-bootstrap';\nconst schema = yup.object({\n  username: yup.string().required(),\n  password: yup.string().required(),\n  terms: yup.bool().required()\n});\n\nclass LoginForm extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: console.log(\"Yeet\"),\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"test1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, \" Username \"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"form-group\",\n      type: \"text\",\n      name: \"username\",\n      value: values.username,\n      onChange: handleChange,\n      isValid: touched.username && !errors.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"test2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, \" Password \"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"form-control\",\n      type: \"password\",\n      name: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      isValid: touched.password && !errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Submit form\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/tudor/work/sd/project/frontend/src/views/LoginForm.js"],"names":["React","Formik","yup","Form","Col","Row","InputGroup","Button","schema","object","username","string","required","password","terms","bool","LoginForm","Component","render","console","log","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, InputGroup, Button } from 'react-bootstrap';\n\n\nconst schema = yup.object({\n    username: yup.string().required(),\n    password: yup.string().required(),\n    terms: yup.bool().required(),\n});\n\nclass LoginForm extends React.Component{\n    render() {\n        return (\n            <Formik\n                validationSchema={schema}\n                onSubmit={console.log(\"Yeet\")}\n                initialValues={{\n                    username: '',\n                    password: '',\n                }}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    values,\n                    touched,\n                    isValid,\n                    errors,\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Group className=\"form-group\" as={Row} controlId=\"test1\">\n                            <Form.Label> Username </Form.Label>\n                            <Form.Control\n                                className=\"form-group\"\n                                type=\"text\"\n                                name=\"username\"\n                                value={values.username}\n                                onChange={handleChange}\n                                isValid={touched.username && !errors.username}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"form-group\" as={Row} controlId=\"test2\">\n                            <Form.Label> Password </Form.Label>\n                            <Form.Control\n                                className=\"form-control\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={values.password}\n                                onChange={handleChange}\n                                isValid={touched.password && !errors.password}\n                            />\n                        </Form.Group>\n                        <Button type=\"submit\" className=\"btn btn-primary btn-block\">Submit form</Button>\n                    </Form>\n                )}\n            </Formik>\n\n        )\n    }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}