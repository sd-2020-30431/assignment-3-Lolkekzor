{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListAddForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport moment from 'moment';\nconst schema = yup.object({\n  listTitle: yup.string().required(),\n  itemTitle: yup.string().required(),\n  itemQuantity: yup.number().required().positive(),\n  itemCalories: yup.number().required().positive(),\n  itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n});\n\nclass ListAddForm extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \" Enter your new grocery list details \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: this.handleCompletion,\n      initialValues: {\n        listTitle: \"\",\n        itemTitle: \"\",\n        itemQuantity: 0,\n        itemCalories: 0,\n        itemDate: \"\",\n        itemExpiration: \"\",\n        itemConsumption: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"listTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, \" List title \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"listTitle\",\n      value: values.listTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.listTitle && !errors.listTitle,\n      isInvalid: touched.listTitle && !!errors.listTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, errors.listTitle))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 37\n      }\n    }, \" Item \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"itemTitle\",\n      value: values.itemTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemTitle && !errors.itemTitle,\n      isInvalid: touched.itemTitle && !!errors.itemTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }\n    }, errors.itemTitle)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemQuantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, \" Quantity \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemQuantity\",\n      value: values.itemQuantity,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemQuantity && !errors.itemQuantity,\n      isInvalid: touched.itemQuantity && !!errors.itemQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, errors.itemQuantity)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemCalories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, \" Calories \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemCalories\",\n      value: values.itemCalories,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemCalories && !errors.itemCalories,\n      isInvalid: touched.itemCalories && !!errors.itemCalories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, errors.itemCalories)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, \" Date of purchase \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemDate\",\n      value: values.itemDate,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemDate && !errors.itemDate,\n      isInvalid: touched.itemDate && !!errors.itemDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }, errors.itemDate)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemExpiration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, \" Date of expiration \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemExpiration\",\n      value: values.itemExpiration,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemExpiration && !errors.itemExpiration,\n      isInvalid: touched.itemExpiration && !!errors.itemExpiration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, errors.itemExpiration)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemConsumption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 37\n      }\n    }, \" Date of consumption \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemConsumption\",\n      value: values.itemConsumption,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemConsumption && !errors.itemConsumption,\n      isInvalid: touched.itemConsumption && !!errors.itemConsumption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, errors.itemConsumption))))));\n  }\n\n}\n\nexport default ListAddForm;","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListAddForm.js"],"names":["React","Formik","yup","Form","Col","Row","moment","schema","object","listTitle","string","required","itemTitle","itemQuantity","number","positive","itemCalories","itemDate","date","min","subtract","calendar","max","add","itemExpiration","itemConsumption","ListAddForm","Component","render","handleCompletion","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport moment from 'moment';\n\nconst schema = yup.object({\n    listTitle: yup.string().required(),\n    itemTitle: yup.string().required(),\n    itemQuantity: yup.number().required().positive(),\n    itemCalories: yup.number().required().positive(),\n    itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n})\n\nclass ListAddForm extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1> Enter your new grocery list details </h1>\n                <hr/>\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.handleCompletion}\n                    initialValues={{\n                        listTitle: \"\",\n                        itemTitle: \"\",\n                        itemQuantity: 0,\n                        itemCalories: 0,\n                        itemDate: \"\",\n                        itemExpiration: \"\",\n                        itemConsumption: \"\" \n                    }}\n                >\n                    {({\n                        handleSubmit,\n                            handleChange,\n                            handleBlur,\n                            values,\n                            touched,\n                            isValid,\n                            errors\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <Form.Row>\n                                <Form.Group className=\"form-group\" as={Row} controlId=\"listTitle\">\n                                    <Form.Label> List title </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"listTitle\"\n                                        value={values.listTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.listTitle && !errors.listTitle}\n                                        isInvalid={touched.listTitle && !!errors.listTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.listTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemTitle\">\n                                    <Form.Label> Item </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"itemTitle\"\n                                        value={values.itemTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemTitle && !errors.itemTitle}\n                                        isInvalid={touched.itemTitle && !!errors.itemTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemQuantity\">\n                                    <Form.Label> Quantity </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemQuantity\"\n                                        value={values.itemQuantity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemQuantity && !errors.itemQuantity}\n                                        isInvalid={touched.itemQuantity && !!errors.itemQuantity}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemQuantity}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemCalories\">\n                                    <Form.Label> Calories </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemCalories\"\n                                        value={values.itemCalories}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemCalories && !errors.itemCalories}\n                                        isInvalid={touched.itemCalories && !!errors.itemCalories}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemCalories}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemDate\">\n                                    <Form.Label> Date of purchase </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemDate\"\n                                        value={values.itemDate}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemDate && !errors.itemDate}\n                                        isInvalid={touched.itemDate && !!errors.itemDate}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemDate}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemExpiration\">\n                                    <Form.Label> Date of expiration </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemExpiration\"\n                                        value={values.itemExpiration}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemExpiration && !errors.itemExpiration}\n                                        isInvalid={touched.itemExpiration && !!errors.itemExpiration}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemExpiration}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemConsumption\">\n                                    <Form.Label> Date of consumption </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemConsumption\"\n                                        value={values.itemConsumption}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemConsumption && !errors.itemConsumption}\n                                        isInvalid={touched.itemConsumption && !!errors.itemConsumption}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemConsumption}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                        </Form>\n\n                    )}\n\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default ListAddForm;\n"]},"metadata":{},"sourceType":"module"}