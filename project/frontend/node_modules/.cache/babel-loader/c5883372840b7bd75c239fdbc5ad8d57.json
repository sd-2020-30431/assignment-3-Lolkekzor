{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/assignment-3-Lolkekzor/project/frontend/src/views/FormExample.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, InputGroup, Button } from 'react-bootstrap';\nconst schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  username: yup.string().required(),\n  city: yup.string().required(),\n  state: yup.string().required(),\n  zip: yup.string().required(),\n  terms: yup.bool().required()\n});\n\nclass FormExample extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: console.log,\n      initialValues: {\n        firstName: 'Mark',\n        lastName: 'Otto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, \"First name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"firstName\",\n      value: values.firstName,\n      onChange: handleChange,\n      isValid: touched.firstName && !errors.firstName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, \"Looks good!\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, \"Last name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"lastName\",\n      value: values.lastName,\n      onChange: handleChange,\n      isValid: touched.lastName && !errors.lastName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, \"Looks good!\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormikUsername\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 41\n      }\n    }, \"@\")), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Username\",\n      \"aria-describedby\": \"inputGroupPrepend\",\n      name: \"username\",\n      value: values.username,\n      onChange: handleChange,\n      isInvalid: !!errors.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 37\n      }\n    }, errors.username)))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"validationFormik03\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"City\",\n      name: \"city\",\n      value: values.city,\n      onChange: handleChange,\n      isInvalid: !!errors.city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, errors.city)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"validationFormik04\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, \"State\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"State\",\n      name: \"state\",\n      value: values.state,\n      onChange: handleChange,\n      isInvalid: !!errors.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }, errors.state)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"validationFormik05\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }\n    }, \"Zip\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Zip\",\n      name: \"zip\",\n      value: values.zip,\n      onChange: handleChange,\n      isInvalid: !!errors.zip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, errors.zip))), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      required: true,\n      name: \"terms\",\n      label: \"Agree to terms and conditions\",\n      onChange: handleChange,\n      isInvalid: !!errors.terms,\n      feedback: errors.terms,\n      id: \"validationFormik0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }, \"Submit form\")));\n  }\n\n}\n\nexport default FormExample;","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-3-Lolkekzor/project/frontend/src/views/FormExample.js"],"names":["React","Formik","yup","Form","Col","InputGroup","Button","schema","object","firstName","string","required","lastName","username","city","state","zip","terms","bool","FormExample","Component","render","console","log","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, InputGroup, Button } from 'react-bootstrap';\n\nconst schema = yup.object({\n    firstName: yup.string().required(),\n    lastName: yup.string().required(),\n    username: yup.string().required(),\n    city: yup.string().required(),\n    state: yup.string().required(),\n    zip: yup.string().required(),\n    terms: yup.bool().required(),\n});\n\nclass FormExample extends React.Component{\n    render() {\n        return (\n            <Formik\n                validationSchema={schema}\n                onSubmit={console.log}\n                initialValues={{\n                    firstName: 'Mark',\n                    lastName: 'Otto',\n                }}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    values,\n                    touched,\n                    isValid,\n                    errors,\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Row>\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\n                                <Form.Label>First name</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"firstName\"\n                                    value={values.firstName}\n                                    onChange={handleChange}\n                                    isValid={touched.firstName && !errors.firstName}\n                                />\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\n                                <Form.Label>Last name</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"lastName\"\n                                    value={values.lastName}\n                                    onChange={handleChange}\n                                    isValid={touched.lastName && !errors.lastName}\n                                />\n\n                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\n                                <Form.Label>Username</Form.Label>\n                                <InputGroup>\n                                    <InputGroup.Prepend>\n                                        <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                                    </InputGroup.Prepend>\n                                    <Form.Control\n                                        type=\"text\"\n                                        placeholder=\"Username\"\n                                        aria-describedby=\"inputGroupPrepend\"\n                                        name=\"username\"\n                                        value={values.username}\n                                        onChange={handleChange}\n                                        isInvalid={!!errors.username}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.username}\n                                    </Form.Control.Feedback>\n                                </InputGroup>\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Row>\n                            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\n                                <Form.Label>City</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"City\"\n                                    name=\"city\"\n                                    value={values.city}\n                                    onChange={handleChange}\n                                    isInvalid={!!errors.city}\n                                />\n\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.city}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\n                                <Form.Label>State</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"State\"\n                                    name=\"state\"\n                                    value={values.state}\n                                    onChange={handleChange}\n                                    isInvalid={!!errors.state}\n                                />\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.state}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\n                                <Form.Label>Zip</Form.Label>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"Zip\"\n                                    name=\"zip\"\n                                    value={values.zip}\n                                    onChange={handleChange}\n                                    isInvalid={!!errors.zip}\n                                />\n\n                                <Form.Control.Feedback type=\"invalid\">\n                                    {errors.zip}\n                                </Form.Control.Feedback>\n                            </Form.Group>\n                        </Form.Row>\n                        <Form.Group>\n                            <Form.Check\n                                required\n                                name=\"terms\"\n                                label=\"Agree to terms and conditions\"\n                                onChange={handleChange}\n                                isInvalid={!!errors.terms}\n                                feedback={errors.terms}\n                                id=\"validationFormik0\"\n                            />\n                        </Form.Group>\n                        <Button type=\"submit\">Submit form</Button>\n                    </Form>\n                )}\n            </Formik>\n\n        )\n    }\n}\n\nexport default FormExample;\n"]},"metadata":{},"sourceType":"module"}