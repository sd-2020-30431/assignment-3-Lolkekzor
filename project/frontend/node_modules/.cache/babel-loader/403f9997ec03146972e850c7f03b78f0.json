{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListDetailView.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Table, Form, Col, Row, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport axios from 'axios';\nimport Alerts from '../reflux/actions/GlobalAlert';\nconst schema = yup.object({\n  itemTitle: yup.string().required(),\n  itemQuantity: yup.number().required().positive(),\n  itemCalories: yup.number().required().positive(),\n  itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n});\n\nclass ListAddForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchItems = () => {\n      axios.get(`http://localhost:8000/list/${this.state.listId}/`, {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        console.log(res);\n        res = res.data;\n        this.setState(prevState => ({ ...prevState,\n          name: res[0].name,\n          items: res[1]\n        }));\n      }).catch(err => {\n        Alerts.add(\"Something went wrong fetching the data.\", \"danger\");\n      });\n    };\n\n    this.handleCompletion = data => {\n      axios.post(`http://localhost:8000/list/${this.state.listId}/`, JSON.stringify({\n        name: data.itemTitle,\n        quantity: data.itemQuantity,\n        calories: data.itemCalories,\n        purchase_date: moment(data.itemDate, \"YYYY-MM-DD\").format(\"YYYY-MM-DD hh:mm:ss\"),\n        expiration_date: moment(data.itemExpiration, \"YYYY-MM-DD\").format(\"YYYY-MM-DD hh:mm:ss\"),\n        consumption_date: moment(data.itemConsumption, \"YYYY-MM-DD\").format(\"YYYY-MM-DD hh:mm:ss\")\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        this.fetchItems();\n      }).catch(err => {\n        Alerts.add(\"Sorry, something went wrong.\", \"danger\");\n      });\n    };\n\n    this.state = {\n      listId: props.match.params.id,\n      name: \"\",\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchItems();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \" Your list: \", this.state.name, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      striped: true,\n      bordered: true,\n      hover: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, \"Item\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Calories\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, \"Purchased\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, \"Expires\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }, \"Consumption\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, this.state.items.map((item, idx) => {\n      let purchase_date = moment(item.purchase_date).format('MMMM Do YYYY, hh:mm:ss');\n      let expiration_date = moment(item.expiration_date).format('MMMM Do YYYY, hh:mm:ss');\n      let consumption_date = moment(item.consumption_date).format('MMMM Do YYYY, hh:mm:ss');\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }\n      }, idx + 1), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }\n      }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 37\n        }\n      }, item.quantity), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 37\n        }\n      }, item.calories), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 37\n        }\n      }, purchase_date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }\n      }, expiration_date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }, consumption_date));\n    }))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, \" Add a new item \"), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: this.handleCompletion,\n      initialValues: {\n        itemTitle: \"\",\n        itemQuantity: 0,\n        itemCalories: 0,\n        itemDate: \"\",\n        itemExpiration: \"\",\n        itemConsumption: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }, \" Item \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"itemTitle\",\n      value: values.itemTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemTitle && !errors.itemTitle,\n      isInvalid: touched.itemTitle && !!errors.itemTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }, errors.itemTitle)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemQuantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, \" Quantity \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemQuantity\",\n      value: values.itemQuantity,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemQuantity && !errors.itemQuantity,\n      isInvalid: touched.itemQuantity && !!errors.itemQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 37\n      }\n    }, errors.itemQuantity)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemCalories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, \" Calories \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemCalories\",\n      value: values.itemCalories,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemCalories && !errors.itemCalories,\n      isInvalid: touched.itemCalories && !!errors.itemCalories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    }, errors.itemCalories)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }, \" Date of purchase \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemDate\",\n      value: values.itemDate,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemDate && !errors.itemDate,\n      isInvalid: touched.itemDate && !!errors.itemDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }\n    }, errors.itemDate)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemExpiration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }, \" Date of expiration \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemExpiration\",\n      value: values.itemExpiration,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemExpiration && !errors.itemExpiration,\n      isInvalid: touched.itemExpiration && !!errors.itemExpiration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, errors.itemExpiration)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemConsumption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 37\n      }\n    }, \" Date of consumption \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemConsumption\",\n      value: values.itemConsumption,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemConsumption && !errors.itemConsumption,\n      isInvalid: touched.itemConsumption && !!errors.itemConsumption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 37\n      }\n    }, errors.itemConsumption))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ListAddForm;","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListDetailView.js"],"names":["React","Formik","yup","Table","Form","Col","Row","Button","useParams","moment","axios","Alerts","schema","object","itemTitle","string","required","itemQuantity","number","positive","itemCalories","itemDate","date","min","subtract","calendar","max","add","itemExpiration","itemConsumption","ListAddForm","Component","constructor","props","fetchItems","get","state","listId","headers","Authorization","localStorage","getItem","then","res","console","log","data","setState","prevState","name","items","catch","err","handleCompletion","post","JSON","stringify","quantity","calories","purchase_date","format","expiration_date","consumption_date","match","params","id","componentDidMount","render","map","item","idx","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Table, Form, Col, Row, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport axios from 'axios';\n\nimport Alerts from '../reflux/actions/GlobalAlert';\n\nconst schema = yup.object({\n    itemTitle: yup.string().required(),\n    itemQuantity: yup.number().required().positive(),\n    itemCalories: yup.number().required().positive(),\n    itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n})\n\nclass ListAddForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listId: props.match.params.id,\n            name: \"\",\n            items: []\n        }\n    }\n\n    componentDidMount() {\n        this.fetchItems();\n    }\n\n    fetchItems = () => {\n        axios.get(`http://localhost:8000/list/${this.state.listId}/`, {\n            headers: {\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        }).then(res => {\n            console.log(res);\n            res = res.data;\n            this.setState((prevState) => (\n                {\n                    ...prevState,\n                    name: res[0].name,\n                    items: res[1]\n                }\n            ))\n        }).catch(err => {\n           Alerts.add(\"Something went wrong fetching the data.\", \"danger\");\n        })\n    }\n\n    handleCompletion = (data) => {\n        axios.post(`http://localhost:8000/list/${this.state.listId}/`, JSON.stringify({\n            name: data.itemTitle,\n            quantity: data.itemQuantity,\n            calories: data.itemCalories,\n            purchase_date: moment(data.itemDate, \"YYYY-MM-DD\").format(\"YYYY-MM-DD hh:mm:ss\"),\n            expiration_date: moment(data.itemExpiration, \"YYYY-MM-DD\").format(\"YYYY-MM-DD hh:mm:ss\"),\n            consumption_date: moment(data.itemConsumption, \"YYYY-MM-DD\").format(\"YYYY-MM-DD hh:mm:ss\")\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        }).then(res => {\n            this.fetchItems();\n        }).catch(err => {\n            Alerts.add(\"Sorry, something went wrong.\", \"danger\");\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1> Your list: {this.state.name} </h1>\n                <hr/>\n                <Table responsive striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Item</th>\n                            <th>Quantity</th>\n                            <th>Calories</th>\n                            <th>Purchased</th>\n                            <th>Expires</th>\n                            <th>Consumption</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.items.map((item, idx) => {\n                            let purchase_date = moment(item.purchase_date).format('MMMM Do YYYY, hh:mm:ss');\n                            let expiration_date = moment(item.expiration_date).format('MMMM Do YYYY, hh:mm:ss');\n                            let consumption_date = moment(item.consumption_date).format('MMMM Do YYYY, hh:mm:ss')\n                            return(\n                                <tr key={idx}>\n                                    <td>{idx + 1}</td>\n                                    <td>{item.name}</td>\n                                    <td>{item.quantity}</td>\n                                    <td>{item.calories}</td>\n                                    <td>{purchase_date}</td>\n                                    <td>{expiration_date}</td>\n                                    <td>{consumption_date}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </Table>\n                <hr/>\n                <h2> Add a new item </h2>\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.handleCompletion}\n                    initialValues={{\n                        itemTitle: \"\",\n                        itemQuantity: 0,\n                        itemCalories: 0,\n                        itemDate: \"\",\n                        itemExpiration: \"\",\n                        itemConsumption: \"\" \n                    }}\n                >\n                    {({\n                        handleSubmit,\n                            handleChange,\n                            handleBlur,\n                            values,\n                            touched,\n                            isValid,\n                            errors\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemTitle\">\n                                    <Form.Label> Item </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"itemTitle\"\n                                        value={values.itemTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemTitle && !errors.itemTitle}\n                                        isInvalid={touched.itemTitle && !!errors.itemTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemQuantity\">\n                                    <Form.Label> Quantity </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemQuantity\"\n                                        value={values.itemQuantity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemQuantity && !errors.itemQuantity}\n                                        isInvalid={touched.itemQuantity && !!errors.itemQuantity}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemQuantity}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemCalories\">\n                                    <Form.Label> Calories </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemCalories\"\n                                        value={values.itemCalories}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemCalories && !errors.itemCalories}\n                                        isInvalid={touched.itemCalories && !!errors.itemCalories}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemCalories}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemDate\">\n                                    <Form.Label> Date of purchase </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemDate\"\n                                        value={values.itemDate}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemDate && !errors.itemDate}\n                                        isInvalid={touched.itemDate && !!errors.itemDate}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemDate}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemExpiration\">\n                                    <Form.Label> Date of expiration </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemExpiration\"\n                                        value={values.itemExpiration}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemExpiration && !errors.itemExpiration}\n                                        isInvalid={touched.itemExpiration && !!errors.itemExpiration}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemExpiration}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemConsumption\">\n                                    <Form.Label> Date of consumption </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemConsumption\"\n                                        value={values.itemConsumption}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemConsumption && !errors.itemConsumption}\n                                        isInvalid={touched.itemConsumption && !!errors.itemConsumption}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemConsumption}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <hr/>\n                            <Button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</Button>\n                        </Form>\n\n                    )}\n\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default ListAddForm;\n"]},"metadata":{},"sourceType":"module"}