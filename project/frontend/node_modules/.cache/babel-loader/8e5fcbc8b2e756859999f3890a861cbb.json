{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListDetailView.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport axios from 'axios';\nconst schema = yup.object({\n  itemTitle: yup.string().required(),\n  itemQuantity: yup.number().required().positive(),\n  itemCalories: yup.number().required().positive(),\n  itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n  itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n});\n\nclass ListAddForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleCompletion = data => {\n      axios.post('http://localhost:8000/lists', JSON.stringify({\n        itemTitle: data.itemTitle,\n        itemQuantity: data.itemQuantity,\n        itemCalories: data.itemCalories,\n        itemDate: data.itemDate,\n        itemExpiration: data.itemExpiration,\n        itemConsumption: data.itemConsumption\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        console.log(res);\n        res = res.data;\n      });\n    };\n\n    this.state = {\n      name: \"TEST\",\n      items: [{\n        name: \"TEST ITEM\",\n        quantity: 100,\n        calories: 200,\n        purchase_date: moment().calendar(),\n        expiration_date: moment().calendar(),\n        consumption_date: moment().calendar()\n      }]\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \" Your list \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \" Add a new item \"), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: this.handleCompletion,\n      initialValues: {\n        itemTitle: \"\",\n        itemQuantity: 0,\n        itemCalories: 0,\n        itemDate: \"\",\n        itemExpiration: \"\",\n        itemConsumption: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }\n    }, \" Item \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"itemTitle\",\n      value: values.itemTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemTitle && !errors.itemTitle,\n      isInvalid: touched.itemTitle && !!errors.itemTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, errors.itemTitle)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemQuantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 37\n      }\n    }, \" Quantity \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemQuantity\",\n      value: values.itemQuantity,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemQuantity && !errors.itemQuantity,\n      isInvalid: touched.itemQuantity && !!errors.itemQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, errors.itemQuantity)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemCalories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, \" Calories \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemCalories\",\n      value: values.itemCalories,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemCalories && !errors.itemCalories,\n      isInvalid: touched.itemCalories && !!errors.itemCalories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, errors.itemCalories)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, \" Date of purchase \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemDate\",\n      value: values.itemDate,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemDate && !errors.itemDate,\n      isInvalid: touched.itemDate && !!errors.itemDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 37\n      }\n    }, errors.itemDate)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemExpiration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, \" Date of expiration \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemExpiration\",\n      value: values.itemExpiration,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemExpiration && !errors.itemExpiration,\n      isInvalid: touched.itemExpiration && !!errors.itemExpiration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }, errors.itemExpiration)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemConsumption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, \" Date of consumption \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemConsumption\",\n      value: values.itemConsumption,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemConsumption && !errors.itemConsumption,\n      isInvalid: touched.itemConsumption && !!errors.itemConsumption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 37\n      }\n    }, errors.itemConsumption))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ListAddForm;","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListDetailView.js"],"names":["React","Formik","yup","Form","Col","Row","Button","moment","axios","schema","object","itemTitle","string","required","itemQuantity","number","positive","itemCalories","itemDate","date","min","subtract","calendar","max","add","itemExpiration","itemConsumption","ListAddForm","Component","constructor","handleCompletion","data","post","JSON","stringify","headers","Authorization","localStorage","getItem","then","res","console","log","state","name","items","quantity","calories","purchase_date","expiration_date","consumption_date","componentDidMount","render","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport axios from 'axios';\n\n\nconst schema = yup.object({\n    itemTitle: yup.string().required(),\n    itemQuantity: yup.number().required().positive(),\n    itemCalories: yup.number().required().positive(),\n    itemDate: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemExpiration: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar()),\n    itemConsumption: yup.date().required().min(moment().subtract(10, 'years').calendar()).max(moment().add(10, 'years').calendar())\n})\n\nclass ListAddForm extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            name: \"TEST\",\n            items: [\n                {\n                    name: \"TEST ITEM\",\n                    quantity: 100,\n                    calories: 200,\n                    purchase_date: moment().calendar(),\n                    expiration_date: moment().calendar(),\n                    consumption_date: moment().calendar()\n                }\n            ]\n\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    handleCompletion = (data) => {\n        axios.post('http://localhost:8000/lists', JSON.stringify({\n            itemTitle: data.itemTitle,\n            itemQuantity: data.itemQuantity,\n            itemCalories: data.itemCalories,\n            itemDate: data.itemDate,\n            itemExpiration: data.itemExpiration,\n            itemConsumption: data.itemConsumption\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        }).then(res => {\n            console.log(res);\n            res = res.data;\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1> Your list </h1>\n                <hr/>\n                \n                <hr/>\n                <h2> Add a new item </h2>\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.handleCompletion}\n                    initialValues={{\n                        itemTitle: \"\",\n                        itemQuantity: 0,\n                        itemCalories: 0,\n                        itemDate: \"\",\n                        itemExpiration: \"\",\n                        itemConsumption: \"\" \n                    }}\n                >\n                    {({\n                        handleSubmit,\n                            handleChange,\n                            handleBlur,\n                            values,\n                            touched,\n                            isValid,\n                            errors\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemTitle\">\n                                    <Form.Label> Item </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"itemTitle\"\n                                        value={values.itemTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemTitle && !errors.itemTitle}\n                                        isInvalid={touched.itemTitle && !!errors.itemTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemQuantity\">\n                                    <Form.Label> Quantity </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemQuantity\"\n                                        value={values.itemQuantity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemQuantity && !errors.itemQuantity}\n                                        isInvalid={touched.itemQuantity && !!errors.itemQuantity}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemQuantity}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemCalories\">\n                                    <Form.Label> Calories </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemCalories\"\n                                        value={values.itemCalories}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemCalories && !errors.itemCalories}\n                                        isInvalid={touched.itemCalories && !!errors.itemCalories}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemCalories}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemDate\">\n                                    <Form.Label> Date of purchase </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemDate\"\n                                        value={values.itemDate}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemDate && !errors.itemDate}\n                                        isInvalid={touched.itemDate && !!errors.itemDate}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemDate}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemExpiration\">\n                                    <Form.Label> Date of expiration </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemExpiration\"\n                                        value={values.itemExpiration}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemExpiration && !errors.itemExpiration}\n                                        isInvalid={touched.itemExpiration && !!errors.itemExpiration}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemExpiration}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemConsumption\">\n                                    <Form.Label> Date of consumption </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemConsumption\"\n                                        value={values.itemConsumption}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemConsumption && !errors.itemConsumption}\n                                        isInvalid={touched.itemConsumption && !!errors.itemConsumption}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemConsumption}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <hr/>\n                            <Button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</Button>\n                        </Form>\n\n                    )}\n\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default ListAddForm;\n"]},"metadata":{},"sourceType":"module"}