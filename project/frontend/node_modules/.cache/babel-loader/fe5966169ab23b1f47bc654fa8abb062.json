{"ast":null,"code":"import Reflux from 'reflux';\nimport axios from 'axios';\nimport LoggedUserActions from '../actions/LoggedUser';\nimport GlobalRedirectActions from '../actions/GlobalRedirect';\n\nclass LoggedUserStore extends Reflux.Store {\n  constructor() {\n    console.log(\"STORE\");\n    super();\n    this.state = {\n      token: localStorage.getItem('token') || '',\n      logged: false,\n      username: undefined\n    };\n    this.listenTo(LoggedUserActions.login, this.login);\n    this.listenTo(LoggedUserActions.tokenAuthenticate, this.tokenAuthenticate);\n    this.listenTo(LoggedUserActions.logout, this.logout);\n    this.tokenAuthenticate();\n  }\n\n  tokenAuthenticate() {\n    if (localStorage.getItem('token') !== undefined) {\n      console.log(\"Authenticating...\");\n      axios.get('http://localhost:8000/core/current_user/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        console.log(res);\n        res = res.data;\n        this.setState(prevState => {\n          return { ...prevState,\n            logged: true,\n            username: res.username\n          };\n        });\n      });\n    }\n  }\n\n  login(user) {\n    axios.post('http://localhost:8000/token-auth/', JSON.stringify({\n      username: user.username,\n      password: user.password\n    }), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(user.username);\n      console.log(res);\n      res = res.data;\n      this.setState({\n        logged: true,\n        username: user.username,\n        token: res.token\n      });\n      localStorage.setItem('token', res.token);\n      GlobalRedirectActions.redirect('/');\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  logout() {\n    this.setState(prevState => {\n      return { ...prevState,\n        token: '',\n        logged: false,\n        username: undefined\n      };\n    });\n    localStorage.removeItem('token');\n  }\n\n}\n\nexport default LoggedUserStore;","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/reflux/stores/LoggedUser.js"],"names":["Reflux","axios","LoggedUserActions","GlobalRedirectActions","LoggedUserStore","Store","constructor","console","log","state","token","localStorage","getItem","logged","username","undefined","listenTo","login","tokenAuthenticate","logout","get","headers","Authorization","then","res","data","setState","prevState","user","post","JSON","stringify","password","setItem","redirect","catch","err","removeItem"],"mappings":"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","sourcesContent":["import Reflux from 'reflux';\nimport axios from 'axios';\n\nimport LoggedUserActions from '../actions/LoggedUser';\nimport GlobalRedirectActions from '../actions/GlobalRedirect';\n\nclass LoggedUserStore extends Reflux.Store {\n    constructor() {\n        console.log(\"STORE\");\n        super();\n        this.state = {\n            token: localStorage.getItem('token') || '',\n            logged: false,\n            username: undefined\n        }\n\n        this.listenTo(LoggedUserActions.login, this.login);\n        this.listenTo(LoggedUserActions.tokenAuthenticate, this.tokenAuthenticate);\n        this.listenTo(LoggedUserActions.logout, this.logout);\n\n        this.tokenAuthenticate();\n    }\n\n    tokenAuthenticate() {\n        if (localStorage.getItem('token') !== undefined) {\n            console.log(\"Authenticating...\");\n            axios.get('http://localhost:8000/core/current_user/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                }\n            }).then(res => {\n                console.log(res);\n                res = res.data;\n                this.setState(prevState => {\n                    return {\n                        ...prevState,\n                        logged: true,\n                        username: res.username\n                    }\n                })\n            })\n        }\n    }\n\n    login(user) {\n        axios.post('http://localhost:8000/token-auth/', JSON.stringify({\n            username: user.username,\n            password: user.password\n        }), {\n            headers: {\"Content-Type\": \"application/json\"}\n        }).then(res => {\n            console.log(user.username);\n            console.log(res);\n            res = res.data;\n            this.setState({\n                logged: true,\n                username: user.username,\n                token: res.token\n            })\n            localStorage.setItem('token', res.token);\n            GlobalRedirectActions.redirect('/');\n        }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    logout() {\n        this.setState(prevState => {\n            return {\n                ...prevState,\n                token: '',\n                logged: false,\n                username: undefined\n            }\n        });\n        localStorage.removeItem('token');\n    }\n}\n\nexport default LoggedUserStore;\n"]},"metadata":{},"sourceType":"module"}