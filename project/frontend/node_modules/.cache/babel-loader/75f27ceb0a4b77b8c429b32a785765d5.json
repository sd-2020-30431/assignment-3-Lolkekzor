{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListAddForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport axios from 'axios';\nconst schema = yup.object({\n  listTitle: yup.string().required()\n});\n\nclass ListAddForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCompletion = data => {\n      axios.post('http://localhost:8000/lists', JSON.stringify({\n        listTitle: data.listTitle\n      }), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        console.log(res);\n        res = res.data;\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \" Enter your new grocery list details \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: this.handleCompletion,\n      initialValues: {\n        listTitle: \"\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"listTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, \" List title \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"listTitle\",\n      value: values.listTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.listTitle && !errors.listTitle,\n      isInvalid: touched.listTitle && !!errors.listTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, errors.listTitle))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ListAddForm;","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListAddForm.js"],"names":["React","Formik","yup","Form","Col","Row","Button","moment","axios","schema","object","listTitle","string","required","ListAddForm","Component","handleCompletion","data","post","JSON","stringify","headers","Authorization","localStorage","getItem","then","res","console","log","render","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport moment from 'moment';\nimport axios from 'axios';\n\n\nconst schema = yup.object({\n    listTitle: yup.string().required(),\n})\n\nclass ListAddForm extends React.Component {\n    handleCompletion = (data) => {\n        axios.post('http://localhost:8000/lists', JSON.stringify({\n            listTitle: data.listTitle,\n        }), {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        }).then(res => {\n            console.log(res);\n            res = res.data;\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1> Enter your new grocery list details </h1>\n                <hr/>\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.handleCompletion}\n                    initialValues={{\n                        listTitle: \"\",\n                    }}\n                >\n                    {({\n                        handleSubmit,\n                            handleChange,\n                            handleBlur,\n                            values,\n                            touched,\n                            isValid,\n                            errors\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <Form.Row>\n                                <Form.Group className=\"form-group\" as={Row} controlId=\"listTitle\">\n                                    <Form.Label> List title </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"listTitle\"\n                                        value={values.listTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.listTitle && !errors.listTitle}\n                                        isInvalid={touched.listTitle && !!errors.listTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.listTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <hr/>\n                            <Button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</Button>\n                        </Form>\n\n                    )}\n\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default ListAddForm;\n"]},"metadata":{},"sourceType":"module"}