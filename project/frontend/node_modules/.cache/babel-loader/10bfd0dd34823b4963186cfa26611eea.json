{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListAddForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nconst schema = yup.object({\n  listTitle: yup.string().required(),\n  itemTitle: yup.string().required(),\n  itemQuantity: yup.number().required().positive(),\n  itemCalories: yup.number().required().positive(),\n  itemDate: yup.date().required()\n});\n\nclass ListAddForm extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \" Enter your new grocery list details \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: this.handleCompletion,\n      initialValues: {\n        listTitle: \"My amazing grocery list\",\n        itemTitle: \"Test item\",\n        itemQuantity: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"listTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 37\n      }\n    }, \" List title \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"listTitle\",\n      value: values.listTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.listTitle && !errors.listTitle,\n      isInvalid: !!errors.listTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, errors.listTitle))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }, \" Item \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"itemTitle\",\n      value: values.itemTitle,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemTitle && !errors.itemTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }\n    }, errors.itemTitle)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemQuantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }, \" Quantity \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemQuantity\",\n      value: values.itemQuantity,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemQuantity && !errors.itemQuantity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }, errors.itemQuantity)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemCalories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }, \" Calories \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"number\",\n      name: \"itemCalories\",\n      value: values.itemCalories,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemCalories && !errors.itemCalories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, errors.itemCalories)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"itemDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, \" Date of purchase \"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"date\",\n      name: \"itemDate\",\n      value: values.itemDate,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.itemDate && !errors.itemDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, errors.itemDate))))));\n  }\n\n}\n\nexport default ListAddForm;","map":{"version":3,"sources":["/home/tudor/work/sd/assignment-2-Lolkekzor/project/frontend/src/views/ListAddForm.js"],"names":["React","Formik","yup","Form","Col","Row","DatePicker","schema","object","listTitle","string","required","itemTitle","itemQuantity","number","positive","itemCalories","itemDate","date","ListAddForm","Component","render","handleCompletion","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\n\nconst schema = yup.object({\n    listTitle: yup.string().required(),\n    itemTitle: yup.string().required(),\n    itemQuantity: yup.number().required().positive(),\n    itemCalories: yup.number().required().positive(),\n    itemDate: yup.date().required()\n})\n\nclass ListAddForm extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1> Enter your new grocery list details </h1>\n                <hr/>\n                <Formik\n                    validationSchema={schema}\n                    onSubmit={this.handleCompletion}\n                    initialValues={{\n                        listTitle: \"My amazing grocery list\",\n                        itemTitle: \"Test item\",\n                        itemQuantity: 0\n                    }}\n                >\n                    {({\n                        handleSubmit,\n                            handleChange,\n                            handleBlur,\n                            values,\n                            touched,\n                            isValid,\n                            errors\n                    }) => (\n                        <Form noValidate onSubmit={handleSubmit}>\n                            <Form.Row>\n                                <Form.Group className=\"form-group\" as={Row} controlId=\"listTitle\">\n                                    <Form.Label> List title </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"listTitle\"\n                                        value={values.listTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.listTitle && !errors.listTitle}\n                                        isInvalid={!!errors.listTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.listTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                            <Form.Row>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemTitle\">\n                                    <Form.Label> Item </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        name=\"itemTitle\"\n                                        value={values.itemTitle}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemTitle && !errors.itemTitle}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemTitle}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemQuantity\">\n                                    <Form.Label> Quantity </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemQuantity\"\n                                        value={values.itemQuantity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemQuantity && !errors.itemQuantity}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemQuantity}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemCalories\">\n                                    <Form.Label> Calories </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"itemCalories\"\n                                        value={values.itemCalories}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemCalories && !errors.itemCalories}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemCalories}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                                <Form.Group as={Col} md=\"2\" controlId=\"itemDate\">\n                                    <Form.Label> Date of purchase </Form.Label>\n                                    <Form.Control\n                                        type=\"date\"\n                                        name=\"itemDate\"\n                                        value={values.itemDate}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        isValid={touched.itemDate && !errors.itemDate}\n                                    />\n                                    <Form.Control.Feedback type=\"invalid\">\n                                        {errors.itemDate}\n                                    </Form.Control.Feedback>\n                                </Form.Group>\n                            </Form.Row>\n                        </Form>\n\n                    )}\n\n                </Formik>\n            </div>\n        )\n    }\n}\n\nexport default ListAddForm;\n"]},"metadata":{},"sourceType":"module"}