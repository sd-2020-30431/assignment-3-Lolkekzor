{"ast":null,"code":"var _jsxFileName = \"/home/tudor/work/sd/project/frontend/src/views/LoginForm.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, InputGroup, Button } from 'react-bootstrap';\nimport './LoginForm.css';\nconst schema = yup.object({\n  username: yup.string().required(\"Please enter an username\").min(3, \"Username must be at least 3 characters long\"),\n  password: yup.string().required(\"Please enter a password\").min(8, \"Password is too short, must be at least 8 characters\")\n});\n\nclass LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.testFunction = () => {\n      console.log(\"Yeet\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Formik, {\n      validationSchema: schema,\n      onSubmit: this.testFunction,\n      initialValues: {\n        username: '',\n        password: ''\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      handleBlur,\n      values,\n      touched,\n      isValid,\n      errors\n    }) => /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"test1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, \" Username \"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"form-group\",\n      type: \"text\",\n      name: \"username\",\n      value: values.username,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.username && !errors.username,\n      isInvalid: !!errors.username,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, errors.username)), /*#__PURE__*/React.createElement(Form.Group, {\n      className: \"form-group\",\n      as: Row,\n      controlId: \"test2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, \" Password \"), /*#__PURE__*/React.createElement(Form.Control, {\n      className: \"form-control\",\n      type: \"password\",\n      name: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      isValid: touched.password && !errors.password,\n      isInvalid: !!errors.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Submit form\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/tudor/work/sd/project/frontend/src/views/LoginForm.js"],"names":["React","Formik","yup","Form","Col","Row","InputGroup","Button","schema","object","username","string","required","min","password","LoginForm","Component","testFunction","console","log","render","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { Form, Col, Row, InputGroup, Button } from 'react-bootstrap';\n\nimport './LoginForm.css';\n\nconst schema = yup.object({\n    username: yup.string().required(\"Please enter an username\").min(3, \"Username must be at least 3 characters long\"),\n    password: yup.string().required(\"Please enter a password\").min(8, \"Password is too short, must be at least 8 characters\"),\n});\n\nclass LoginForm extends React.Component{\n    testFunction = () => {\n        console.log(\"Yeet\");\n    }\n\n    render() {\n        return (\n            <Formik\n                validationSchema={schema}\n                onSubmit={this.testFunction}\n                initialValues={{\n                    username: '',\n                    password: '',\n                }}\n            >\n                {({\n                    handleSubmit,\n                    handleChange,\n                    handleBlur,\n                    values,\n                    touched,\n                    isValid,\n                    errors,\n                }) => (\n                    <Form noValidate onSubmit={handleSubmit}>\n                        <Form.Group className=\"form-group\" as={Row} controlId=\"test1\">\n                            <Form.Label> Username </Form.Label>\n                            <Form.Control\n                                className=\"form-group\"\n                                type=\"text\"\n                                name=\"username\"\n                                value={values.username}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                isValid={touched.username && !errors.username}\n                                isInvalid={!!errors.username}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                {errors.username}\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Form.Group className=\"form-group\" as={Row} controlId=\"test2\">\n                            <Form.Label> Password </Form.Label>\n                            <Form.Control\n                                className=\"form-control\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={values.password}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                isValid={touched.password && !errors.password}\n                                isInvalid={!!errors.password}\n                            />\n                            <Form.Control.Feedback type=\"invalid\">\n                                {errors.password}\n                            </Form.Control.Feedback>\n                        </Form.Group>\n                        <Button type=\"submit\" className=\"btn btn-primary btn-block\">Submit form</Button>\n                    </Form>\n                )}\n            </Formik>\n\n        )\n    }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}